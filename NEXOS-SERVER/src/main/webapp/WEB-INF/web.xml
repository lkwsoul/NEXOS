<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
	<display-name>neXos System</display-name>
	<welcome-file-list>
	 <welcome-file>Main.jsp</welcome-file>
	</welcome-file-list>

	<!-- Log4j Path -->
	<context-param>
    <param-name>webAppRootKey</param-name>
    <param-value>wms.webapp.root</param-value>
  </context-param>
  <context-param>
    <param-name>log4jConfigLocation</param-name>
    <param-value>/WEB-INF/classes/log4j.xml</param-value>
  </context-param>
  <context-param>
	  <description>Interval between config file refresh checks, in milliseconds. If not specified,
	      no refresh checks will happen, which avoids starting Log4J's watchdog thread.
	      1000 * 60 = 1Minutes
	      I have ever tested. This Works Well.
	  </description>
	  <param-name>log4jRefreshInterval</param-name>
	  <param-value>6000</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
  </listener>
  
  <!-- Http Flex Session attribute and binding listener support -->
  <listener>
    <listener-class>flex.messaging.HttpFlexSession</listener-class>
  </listener>
  
	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
        classpath:/nexosframework/spring/context-*.xml
    </param-value>
  </context-param>
  
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

  <!-- Spring Security Settings -->
  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!--
  <listener>
    <listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
  </listener>
  <session-config>
    <session-timeout>30</session-timeout>
  </session-config> -->
  
	<!-- Encoding Settings -->
	<filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>utf-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

	<!-- Spring MVC Dispatcher Servlet - Servlet -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/dispatcher-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/appServlet</url-pattern>
	</servlet-mapping>
	
	<!-- Sping MVC Dispatcher Servlet - Flex(BlazeDS) -->
  <servlet>
    <servlet-name>MessageBrokerServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/spring/flex-servlet.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>MessageBrokerServlet</servlet-name>
    <url-pattern>/messagebroker/*</url-pattern>
  </servlet-mapping>
  
  <!-- Reporting Dispatcher Servlet - Servlet -->
  <servlet>
    <servlet-name>reportServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/spring/report-servlet.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>reportServlet</servlet-name>
    <url-pattern>/report/*</url-pattern>
  </servlet-mapping> 

</web-app>
