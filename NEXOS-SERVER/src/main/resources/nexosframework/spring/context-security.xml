<?xml version="1.0" encoding="UTF-8"?>
<!--
  ######################################################################################
  ## 공통적으로 사용하는 Spring Root Context 설정 [보안 설정]                                                     
  ## Author     : Lee Kyung-woo                                                       
  ## Date       : 2012-11-20                          
  ## Description
  ##   Root Context 중에서 보안 설정 부분
  ######################################################################################
-->
<b:beans xmlns="http://www.springframework.org/schema/security"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:b="http://www.springframework.org/schema/beans"
         xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                             http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

  <http auto-config="true" use-expressions="true" >
    <intercept-url pattern="/Main.jsp"          access="permitAll"                      />
    <intercept-url pattern="/crossdomain.xml"   access="permitAll"                      />
    <intercept-url pattern="/**/*.swf"          access="permitAll"                      />
    <intercept-url pattern="/**/*.gif"          access="permitAll"                      />
    <intercept-url pattern="/**/*.css"          access="permitAll"                      />
    <intercept-url pattern="/**/*.gif"          access="permitAll"                      />
    <intercept-url pattern="/**/*.png"          access="permitAll"                      />
    <intercept-url pattern="/**/*.jpg"          access="permitAll"                      />
    <intercept-url pattern="/**/*.ttf"          access="permitAll"                      />
    <intercept-url pattern="/**/*.html"         access="permitAll"                      />
    <intercept-url pattern="/**/*.js"           access="permitAll"                      />
    <intercept-url pattern="/**"                access="permitAll"           />
    <!-- <intercept-url pattern="/**"                access="hasRole('ROLE_USER')"           /> -->
  </http>             
  
  <!-- 보안처리를 위한 DAO 주입 -->
  <b:bean id="userDAO"                    class="nexosframework.common.security.UserDAO">
    <b:property name="sqlMapClient" ref="sqlMapClient" />
  </b:bean>
  <!-- 보안처리 서비스등록      -->
  <b:bean id="customUserDetailsService"   class="nexosframework.common.security.UserDetailsServiceImpl">
    <b:property name="DAO" ref="userDAO"/>
  </b:bean>
  
  <authentication-manager alias="authenticationManager">
    <!-- 보안처리 서비스등록 -->
    <authentication-provider user-service-ref="customUserDetailsService"/>
  </authentication-manager>
  
  <global-method-security secured-annotations="enabled">
    <!-- services 대해서 ROLE_USER를 세팅합니다 -->
    <protect-pointcut access="ROLE_USER" expression="execution(* nexosframework.service..*.*(..))"/>
  </global-method-security>
  
</b:beans>